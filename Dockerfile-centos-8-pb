# Dockerfile for OpenLogReplicator
# Copyright (C) 2018-2021 Adam Leszczynski (aleszczynski@bersler.com)
#
# This file is part of OpenLogReplicator
# 
# Open Log Replicator is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# Open Log Replicator is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Open Log Replicator; see the file LICENSE.txt  If not see
# <http://www.gnu.org/licenses/>.
#
# OpenLogReplicator Dockerfile
# --------------------------
# This is the Dockerfile for OpenLogReplicator
#
# REQUIRED FILES TO BUILD THIS IMAGE
# ----------------------------------
#
# (1) instantclient-basic-linux.x64-19.12.0.0.zip
# (2) instantclient-sdk-linux.x64-19.12.0.0.zip
#     Download from https://www.oracle.com/database/technologies/instant-client.html
#
# HOW TO BUILD THIS IMAGE
# -----------------------
# Put all downloaded files in the same directory as this Dockerfile
# Run:
#       $ docker build -t bersler/openlogreplicator-pb:centos-8 -f Dockerfile-centos-8-pb --build-arg GIDOLR=1001 --build-arg UIDOLR=1001 --build-arg GIDORA=1000 .
#

FROM centos:8 as builder
ARG GIDOLR=1001
ARG UIDOLR=1001
ARG GIDORA=1000

MAINTAINER Adam Leszczynski <aleszczynski@bersler.com>

ENV LC_ALL=C
ENV LANG en_US.UTF-8
ENV ORACLE_MAJOR 19
ENV ORACLE_MINOR 12
ENV PROTOBUF_VERSION 3.17.3
ENV RAPIDJSON_VERSION 1.1.0
ENV LIBRDKAFKA_VERSION 1.7.0
ENV OPENLOGREPLICATOR_VERSION 0.9.25-beta
ENV LD_LIBRARY_PATH=/opt/instantclient_${ORACLE_MAJOR}_${ORACLE_MINOR}:/opt/librdkafka/lib

COPY instantclient-basic-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip /tmp/instantclient-basic-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip
COPY instantclient-sdk-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip /tmp/instantclient-sdk-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip

RUN set -eux ; \
    yum install -y diffutils make gcc gcc-c++ file unzip libasan libaio libaio-devel zlib-devel libnsl autoconf automake libtool wget tar ; \
    cd /opt ; \
    unzip /tmp/instantclient-basic-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip ; \
    rm /tmp/instantclient-basic-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip ; \
    unzip /tmp/instantclient-sdk-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip ; \
    rm /tmp/instantclient-sdk-linux.x64-${ORACLE_MAJOR}.${ORACLE_MINOR}.0.0.0dbru.zip ; \
    cd /opt/instantclient_${ORACLE_MAJOR}_${ORACLE_MINOR} ; \
    ln -s libclntshcore.so.${ORACLE_MAJOR}.1 libclntshcore.so ; \
    cd /opt ; \
    wget https://github.com/edenhill/librdkafka/archive/refs/tags/v${LIBRDKAFKA_VERSION}.tar.gz ; \
    tar xzvf v${LIBRDKAFKA_VERSION}.tar.gz ; \
    rm v${LIBRDKAFKA_VERSION}.tar.gz ; \
    cd /opt/librdkafka-${LIBRDKAFKA_VERSION} ; \
    ./configure --prefix=/opt/librdkafka ; \
    make ; \
    make install ; \
    cd /opt ; \
    wget https://github.com/Tencent/rapidjson/archive/refs/tags/v${RAPIDJSON_VERSION}.tar.gz ; \
    tar xzvf v${RAPIDJSON_VERSION}.tar.gz ; \
    rm v${RAPIDJSON_VERSION}.tar.gz ; \
    ln -s rapidjson-${RAPIDJSON_VERSION} rapidjson ; \
    cd /opt ; \
    wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-cpp-${PROTOBUF_VERSION}.tar.gz ; \
    tar xzvf protobuf-cpp-${PROTOBUF_VERSION}.tar.gz ; \
    rm protobuf-cpp-${PROTOBUF_VERSION}.tar.gz ; \
    cd /opt/protobuf-${PROTOBUF_VERSION} ; \
    ./configure --prefix=/opt/protobuf ; \
    make ; \
    make install ; \
    cd /opt ; \
    mkdir /opt/OpenLogReplicator ; \
    mkdir /opt/OpenLogReplicator/scripts-src ; \
    wget https://github.com/bersler/OpenLogReplicator/archive/refs/tags/${OPENLOGREPLICATOR_VERSION}.tar.gz ; \
    tar xzvf ${OPENLOGREPLICATOR_VERSION}.tar.gz ; \
    rm ${OPENLOGREPLICATOR_VERSION}.tar.gz ; \
    cd /opt/OpenLogReplicator-${OPENLOGREPLICATOR_VERSION} ; \
    autoreconf -f -i ; \
    ./configure CXXFLAGS='-O3' --with-rapidjson=/opt/rapidjson --with-rdkafka=/opt/librdkafka --with-instantclient=/opt/instantclient_${ORACLE_MAJOR}_${ORACLE_MINOR} --with-protobuf=/opt/protobuf ; \
    cd proto ; \
    export PATH=/opt/protobuf/bin:$PATH ; \
    protoc OraProtoBuf.proto --cpp_out=. ; \
    mv OraProtoBuf.pb.cc ../src/OraProtoBuf.pb.cpp ; \
    mv OraProtoBuf.pb.h ../src/OraProtoBuf.pb.h ; \
    cd .. ; \
    make ; \
    mv src/OpenLogReplicator /opt/OpenLogReplicator ; \
    mv scripts/* /opt/OpenLogReplicator/scripts-src ; \
    mv AUTHORS /opt/OpenLogReplicator ; \
    mv CHANGELOG /opt/OpenLogReplicator ; \
    mv LICENSE /opt/OpenLogReplicator ; \
    mv README.md /opt/OpenLogReplicator ; \
    rm -rf /opt/OpenLogReplicator-${OPENLOGREPLICATOR_VERSION} /opt/rapidjson /opt/rapidjson-${RAPIDJSON_VERSION} /opt/librdkafka-${LIBRDKAFKA_VERSION} /opt/protobuf-${PROTOBUF_VERSION} ; \
    yum -y remove make gcc gcc-c++ file unzip libaio-devel zlib-devel autoconf automake libtool wget ; \
    yum -y autoremove ; \
    yum clean all ; \
    rm -rf /var/cache/yum ; \
    mkdir /home/user1 ; \
    groupadd -g $GIDOLR user1 ; \
    if [ $GIDOLR != $GIDORA ]; then groupadd -g $GIDORA oracle; useradd -u $UIDOLR user1 -g user1 -G oracle -d /home/user1; else useradd -u $UIDOLR user1 -g user1 -d /home/user1; fi ; \
    chown -R user1:user1 /home/user1 ; \
    su - user1 -c "export LD_LIBRARY_PATH=/opt/instantclient_${ORACLE_MAJOR}_${ORACLE_MINOR}:/opt/librdkafka/lib; /opt/OpenLogReplicator/OpenLogReplicator --version"

USER user1
WORKDIR /opt/OpenLogReplicator
ENTRYPOINT ./OpenLogReplicator
